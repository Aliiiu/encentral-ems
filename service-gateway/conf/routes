#swagger
GET            /api-docs.json                                                  controllers.ApiHelpController.getResources
GET            /api-docs.json/auth                                             controllers.ApiHelpController.getResource(path = "/auth")
GET            /api-server/api-docs.json                                       controllers.ApiHelpController.getResources
GET            /api-server/api-docs.json/auth                                  controllers.ApiHelpController.getResource(path = "/auth")
# Map static resources from the /public folder to the /assets URL path
GET            /api-server/assets/*file                                        controllers.Assets.at(path="/public", file)
GET            /assets/*file                                                   controllers.Assets.at(path="/public", file)
GET            /                                                               controllers.HomeController.index

OPTIONS        /*all                                                           controllers.HomeController.preflight(all)


GET            /docs                                                           controllers.HomeController.swagger()
GET            /api-server/error                                               controllers.HomeController.error()
GET            /api-server/error/                                              controllers.HomeController.error()
GET            /error                                                          controllers.HomeController.error()
GET            /error/                                                         controllers.HomeController.error()
GET            /api-docs                                                       controllers.HomeController.api()

POST           /app-config/                                                    controllers.system_configuration.MyController.addAppConfig()
PATCH          /app-config/:appConfigId/                                       controllers.system_configuration.MyController.updateAppConfig(appConfigId : String)
GET            /app-config/:appConfigId/                                       controllers.system_configuration.MyController.getAppConfig(appConfigId : String)
GET            /app-config/                                                    controllers.system_configuration.MyController.getAppConfigs()
DELETE         /app-config/:appConfigId/                                       controllers.system_configuration.MyController.deleteAppConfig(appConfigId : String)



###### Permission Endpoints ######
GET            /permission/                                                    controllers.system_configuration.PermissionController.getAllPermissions()
POST           /permission/                                                    controllers.system_configuration.PermissionController.addPermission()
GET            /permission/:permissionId/                                      controllers.system_configuration.PermissionController.getPermission(permissionId: String)
PATCH          /permission/:permissionId/                                      controllers.system_configuration.PermissionController.updatePermission(permissionId: String)
DELETE         /permission/:permissionId/                                      controllers.system_configuration.PermissionController.deletePermission(permissionId: String)


###### Role Endpoints ######
GET            /role/                                                          controllers.system_configuration.RoleController.getAllRole()
POST           /role/                                                          controllers.system_configuration.RoleController.addRole()
GET            /role/:roleId/                                                  controllers.system_configuration.RoleController.getRole(roleId: String)
PATCH          /role/:roleId/                                                  controllers.system_configuration.RoleController.updateRole(roleId: String)
DELETE         /role/:roleId/                                                  controllers.system_configuration.RoleController.deleteRole(roleId: String)
